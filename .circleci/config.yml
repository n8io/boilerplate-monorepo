version: 2.1

jobs:
  install:
    docker:
      - image: circleci/node:14.2.0
    environment:
      TERM: xterm
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v1-deps-{{ checksum "yarn.lock" }}
            - v1-deps-
      - run:
          name: Installing dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Running linters
          command: yarn lint
      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - packages/common/node_modules
            - packages/service/node_modules
            - packages/ui/node_modules
            - packages/ui-common/node_modules
            - ~/.cache/yarn

  test:
    docker:
      - image: circleci/node:14.2.0
    environment:
      TERM: xterm
    working_directory: ~/app
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v1-deps-{{ checksum "yarn.lock" }}
            - v1-deps-
      - run:
          name: Build [common] dependencies
          command: yarn -s build:common
      - run:
          name: Running unit tests
          command: |
            TEST_PATHS=$(circleci tests glob "packages/*/**/*.spec.js" | circleci tests split --split-by=timings)
            yarn test:ci ${TEST_PATHS}
      - store_test_results:
          path: .tmp/test-results
      - run:
          name: Upload code coverage
          command: |
            bash <(curl -s https://codecov.io/bash)

  deploy-service:
    docker:
      - image: circleci/node:14.2.0
    steps:
      - checkout
      - run:
          name: Check the [service] needs pushed
          command: ./.circleci/exit-untouched.sh packages/common packages/service
      - run:
          name: Deploy [service] to Heroku
          command: |
            git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_SERVICE.git master

  deploy-ui-dev:
    docker:
      - image: circleci/node:14.2.0
    environment:
      TERM: xterm
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v1-deps-{{ checksum "yarn.lock" }}
            - v1-deps-
      - run:
          name: Build [ui]
          command: |
            REACT_APP_COMMIT_HASH="$(git rev-parse --short HEAD)" \
            REACT_APP_COMMIT_MESSAGE="$(git log --oneline --format=%B -n 1 HEAD | head -n 1)" \
            REACT_APP_GRAPHQL_URI="${REACT_APP_GRAPHQL_URI_DEV}" \
            REACT_APP_CAPTCHA_SITE_KEY="${REACT_APP_CAPTCHA_SITE_KEY}" \
            NODE_ENV=development \
            yarn -s build:ui
      - run:
          name: Install CloudFlare cli (wrangler)
          command: |
            cd packages/ui
            yarn add --dev @cloudflare/wrangler
      - run:
          name: Deploy [ui] to CloudFlare Workers (https://app-dev.n8c.io)
          command: |
            cd packages/ui
            yarn wrangler publish --env development

  deploy-ui:
    docker:
      - image: circleci/node:14.2.0
    environment:
      TERM: xterm
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v1-deps-{{ checksum "yarn.lock" }}
            - v1-deps-
      - run:
          name: Build [ui]
          command: |
            REACT_APP_RELEASE="$(git describe --abbrev=0)" \
            REACT_APP_GRAPHQL_URI="${REACT_APP_GRAPHQL_URI_PRD}" \
            REACT_APP_CAPTCHA_SITE_KEY="${REACT_APP_CAPTCHA_SITE_KEY}" \
            yarn -s build:ui
      - run:
          name: Install CloudFlare cli (wrangler)
          command: |
            cd packages/ui
            yarn add --dev @cloudflare/wrangler
      - run:
          name: Deploy [ui] to CloudFlare Workers (https://app.n8c.io)
          command: |
            cd packages/ui
            yarn wrangler publish --env production

workflows:
  version: 2
  features:
    jobs:
      - install:
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /^v.*/
      - test:
          requires:
            - install
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /^v.*/
      - deploy-ui-dev:
          requires:
            - test
          filters:
            branches:
              only: master
  release:
    jobs:
      - install:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - test:
          requires:
            - install
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - approve-deploy:
          type: approval
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy-service:
          requires:
            - approve-deploy
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy-ui:
          requires:
            - approve-deploy
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
